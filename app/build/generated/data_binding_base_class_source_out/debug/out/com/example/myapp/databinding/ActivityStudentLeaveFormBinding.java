// Generated by view binder compiler. Do not edit!
package com.example.myapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStudentLeaveFormBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final CheckBox casualLeaveCheckbox;

  @NonNull
  public final CheckBox oneDayLeaveCheckbox;

  @NonNull
  public final CheckBox parentsMailedCheckbox;

  @NonNull
  public final CheckBox sickLeaveCheckbox;

  private ActivityStudentLeaveFormBinding(@NonNull ScrollView rootView,
      @NonNull CheckBox casualLeaveCheckbox, @NonNull CheckBox oneDayLeaveCheckbox,
      @NonNull CheckBox parentsMailedCheckbox, @NonNull CheckBox sickLeaveCheckbox) {
    this.rootView = rootView;
    this.casualLeaveCheckbox = casualLeaveCheckbox;
    this.oneDayLeaveCheckbox = oneDayLeaveCheckbox;
    this.parentsMailedCheckbox = parentsMailedCheckbox;
    this.sickLeaveCheckbox = sickLeaveCheckbox;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStudentLeaveFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStudentLeaveFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_student_leave_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStudentLeaveFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.casual_leave_checkbox;
      CheckBox casualLeaveCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (casualLeaveCheckbox == null) {
        break missingId;
      }

      id = R.id.one_day_leave_checkbox;
      CheckBox oneDayLeaveCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (oneDayLeaveCheckbox == null) {
        break missingId;
      }

      id = R.id.parents_mailed_checkbox;
      CheckBox parentsMailedCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (parentsMailedCheckbox == null) {
        break missingId;
      }

      id = R.id.sick_leave_checkbox;
      CheckBox sickLeaveCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (sickLeaveCheckbox == null) {
        break missingId;
      }

      return new ActivityStudentLeaveFormBinding((ScrollView) rootView, casualLeaveCheckbox,
          oneDayLeaveCheckbox, parentsMailedCheckbox, sickLeaveCheckbox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
